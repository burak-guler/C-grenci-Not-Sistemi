<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>